apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
//apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-parcelize'

android {
    compileSdk 33
    buildToolsVersion '33.0.0'
    namespace "com.mmjang.ankihelper"
    defaultConfig {
        applicationId "com.mmjang.ankihelper"
        minSdk ANDROID_MIN_SDK
        targetSdkVersion ANDROID_TARGET_SDK_VERSION
        versionCode VERSION_CODE
        versionName VERSION_NAME
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
        setProperty("archivesBaseName", "Anki 划词助手+" + " " + versionName)

//        externalNativeBuild {
//            cmake {
//                cppFlags ""
//            }
//        }

//        // 配置NDK
//        ndk {
//            moduleName "ActivationCodeUtils"
//            ldLibs "log"
//            abiFilters 'armeabi-v7a', 'arm64-v8a', 'x86', 'x86_64'
//        }
    }

    splits {
        abi {
            enable true
            reset()
            include ('arm64-v8a', 'armeabi-v7a', 'x86', 'x86_64')
            universalApk false
        }
    }

    signingConfigs {
        release {
            keyAlias 'key0'
            keyPassword 'ss4235087'
            storeFile file('/Volumes/m/Documents/keys/ankihelperKey.jks')
            storePassword 'ss4235087'
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true //资源压缩
            zipAlignEnabled true //压缩优化
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
            multiDexEnabled true
        }

        //这说明，安装debug时候，主城release包
        debug {
            signingConfig signingConfigs.release
        }

    }

//    // ndk 配置
//    externalNativeBuild {
//        cmake {
//            path "src/main/cpp/CMakeLists.txt"
//            version "3.10.2"
//        }
//    }
//
//    ndkVersion '21.4.7075529'

    lintOptions {
        checkReleaseBuilds false
    }

    packagingOptions {
        exclude 'META-INF/proguard/androidx-annotations.pro'

        exclude 'META-INF/LICENSE.md'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/CONTRIBUTORS.md'
        exclude 'META-INF/NOTICE.md'
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'com.google.android.material:material:1.5.0'
    implementation 'androidx.appcompat:appcompat:1.4.1'
//    androidTestImplementation('com.android.support.test.espresso:espresso-core:3.0.2', {
//        exclude group: 'com.android.support', module: 'support-annotations'
//    })

    //noinspection GradleCompatible
//    implementation "com.android.support:appcompat-v7:$ANDROID_LIB_VERSION"
//    implementation "com.android.support:recyclerview-v7:$ANDROID_LIB_VERSION"
//    implementation "com.android.support:cardview-v7:$ANDROID_LIB_VERSION"
    implementation 'androidx.multidex:multidex:2.0.1'

    //api 'com.ichi2.anki:api:1.1.0alpha5'
    //noinspection GradleDynamicVersion
    api 'com.readystatesoftware.sqliteasset:sqliteassethelper:2.0.1'
    api 'org.litepal.android:core:1.5.1'
//    implementation 'com.google.android.material:material:1.3.0'
    implementation 'me.everything:overscroll-decor-android:1.0.4'
    implementation 'org.apmem.tools:layouts:1.10@aar'
    implementation 'org.jsoup:jsoup:1.15.4'
    implementation 'com.balysv:material-ripple:1.0.2'
    implementation 'me.rosuh:AndroidFilePicker:0.8.3'
//    implementation("org.greenrobot:eventbus:3.3.1")
//    implementation 'com.google.guava:guava:23.0-android'
    implementation 'com.jakewharton.threetenabp:threetenabp:1.4.6'
    implementation 'com.github.PhilJay:MPAndroidChart:v3.1.0-alpha'
    //implementation project(':folioreader')
//    implementation 'com.android.support.constraint:constraint-layout:2.0.4'
//    implementation 'com.tencent.bugly:crashreport:latest.release'
    implementation 'com.squareup.okhttp3:okhttp:5.0.0-alpha.11'
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'
    //其中latest.release指代最新Bugly SDK版本号，也可以指定明确的版本号，例如2.2.0
    testImplementation 'junit:junit:4.13.2'
    implementation 'com.github.bumptech.glide:glide:4.15.1'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.15.1'
    implementation "com.tonyodev.fetch2:fetch2:2.3.6"
    implementation 'com.atilika.kuromoji:kuromoji-ipadic:0.9.0'
    implementation 'com.danikula:videocache:2.7.1'
    // https://mavenlibs.com/maven/dependency/com.google.code.gson/gson
    implementation 'com.google.code.gson:gson:2.9.0'
//    implementation 'org.codehaus.plexus:plexus-utils:3.2.1'

    //downloadManager
    implementation 'com.liulishuo.filedownloader:library:1.7.7'


    implementation 'com.github.yueban:EasyFloat:1.2.8-yueban'
    implementation 'com.trello:rxlifecycle-components:1.0'
    implementation 'cz.adaptech:tesseract4android:4.1.1'

    implementation 'androidx.recyclerview:recyclerview:1.2.1'
    implementation 'me.everything:overscroll-decor-android:1.0.4'
//    implementation 'com.trello:rxlifecycle-components:0.6.1'

    //mlkit
    // To recognize Latin script
    api 'com.google.mlkit:text-recognition:16.0.0'
    // To recognize Chinese script
    api 'com.google.mlkit:text-recognition-chinese:16.0.0'
    // To recognize Devanagari script
    api 'com.google.mlkit:text-recognition-devanagari:16.0.0'
    // To recognize Japanese script
    api 'com.google.mlkit:text-recognition-japanese:16.0.0'
    // To recognize Korean script
    api 'com.google.mlkit:text-recognition-korean:16.0.0'


    //MathxView
//    implementation 'com.github.mohd-naushaaad:mathview:1.0.2'
//    implementation 'io.github.kexanie.library:MathView:0.0.6'
    implementation 'com.x5dev:chunk-templates:3.6.2'
    implementation 'org.apache.commons:commons-text:1.10.0'

    //layout
    implementation 'cn.wolfspider:autowraplinelayout:1.0.1'

    //perform edit
//    implementation 'ren.qinc.edit:lib:0.0.5'

    //html2bitmap
    implementation 'com.izettle:html2bitmap:1.10'

    //简繁工具nlp
    implementation 'org.nlpcn:nlp-lang:1.7.9'

    //mdx
//    implementation files('libs/chardet.jar',
//            'libs/commons-lang-2.1.jar',
////            'libs/commons-text-1.4.jar',
//            'libs/lzo-core-1.0.5.jar')
    implementation files('libs/chardet.jar',
//            'libs/commons-text-1.4.jar',
            'libs/lzo-core-1.0.6.jar',
//            'libs/closure-compiler-v20200628.jar',
//            "libs/com.springsource.javax.media.jai.core-1.1.3.jar",
//            "libs/com.springsource.javax.media.jai.codec-1.1.3.jar",
//            "libs/commons-imaging-1.0-alpha1-sources.jar",
//            "libs/commons-imaging-1.0-alpha1.jar"
    )
    implementation 'com.alibaba:fastjson:1.2.62'
    implementation 'org.jruby.jcodings:jcodings:latest.release'
    implementation'org.jruby.joni:joni:latest.release'
    implementation 'org.nanohttpd:nanohttpd:latest.release'
//    implementation 'org.xiph.speex:speexdec:latest.release'
    // Use this instead
//    implementation ('tokyo.northside:mdict4j:0.5.4') {
//        exclude group: 'org.anarres.lzo', module: 'lzo-core'
//        exclude module: 'annotations'
//        exclude group: 'com.fasterxml.jackson.core', module: 'jackson-core'
//        exclude group: 'com.fasterxml.jackson.core', module: 'jackson-annotations'
//        exclude group: 'com.fasterxml.jackson.core', module: 'jackson-databind'
//        exclude group: 'com.fasterxml.jackson.dataformat', module: 'jackson-dataformat-xml'
//    }
////    //由于jdk11删除了java.xml.bind这个包，所以这里要手动重新引入
////    implementation(libs.jetbrains.annotations)
////    implementation(libs.jackson.core)
////    implementation(libs.jackson.databind)
////    implementation(libs.jackson.xml)
////    implementation(libs.bc.prov)
//    implementation ('javax.xml.stream:stax-api:1.0-2') {
//    }
////    implementation('com.fasterxml.jackson.core:jackson-core:2.11.1')
////    implementation('com.fasterxml.jackson.core:jackson-annotations:2.11.1')
////    implementation('com.fasterxml.jackson.core:jackson-databind:2.11.1')
//    implementation('com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.13.0') {
//    }
}

//android.applicationVariants.all { variant ->
//    if (variant.buildType.name == 'release') {//release版本
//        variant.getMergeAssetsProvider().get().doLast {
//            //屏蔽assets文件夹下的所有wordbean.db数据库文件
//            delete(fileTree(dir: variant.mergeAssets.outputDir, includes: ['databases/wordbean.db']))
//        }
//    }
//}

android.applicationVariants.all { variant ->
    if (variant.buildType.name == 'release') {
        variant.getMergeAssetsProvider().get().doLast {
            //屏蔽katex文件夹
            delete(fileTree(dir: variant.mergeAssets.outputDir, includes: ['tesseract/tessdata/lat.traineddata', 'katex', 'katex/contrib', 'katex/fonts','katex/*', 'katex/contrib/*', 'katex/fonts/*']))
        }
    }
}